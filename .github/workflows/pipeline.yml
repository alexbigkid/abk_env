name: abk_env

on:
  push:
  pull_request:

jobs:
  MacOS:
    name: MacOS ${{ matrix.version }} - ${{ matrix.shell }}
    runs-on: macos-${{ matrix.version }}
    strategy:
      matrix:
        version: [14, 15]
        shell: [bash, zsh]
    steps:
      - uses: actions/checkout@v4

      - name: Ensure ${{ matrix.shell }} is installed
        run: |
            SHELL_CMD="${{ matrix.shell }}"
            echo "Checking if $SHELL_CMD is installed..."
            if ! command -v "$SHELL_CMD" &> /dev/null; then
                echo "$SHELL_CMD not found, attempting to install..."
                sudo apt-get update
                sudo apt-get install -y "$SHELL_CMD"
            else
                echo "$SHELL_CMD is already installed."
            fi

      - name: Run tool install/uninstall in ${{ matrix.shell }}
        run: ${{ matrix.shell }} -c "./pipeline_test.sh"

  Ubuntu:
    name: Ubuntu ${{ matrix.version }} - ${{ matrix.shell }}
    runs-on: ubuntu-${{ matrix.version }}
    strategy:
      matrix:
        version: [22.04, 24.04]
        shell: [bash, zsh]
    steps:
      - uses: actions/checkout@v4

      - name: Ensure ${{ matrix.shell }} is installed
        run: |
            SHELL_CMD="${{ matrix.shell }}"
            echo "Checking if $SHELL_CMD is installed..."
            if ! command -v "$SHELL_CMD" &> /dev/null; then
                echo "$SHELL_CMD not found, attempting to install..."
                sudo apt-get update
                sudo apt-get install -y "$SHELL_CMD"
            else
                echo "$SHELL_CMD is already installed."
            fi

      - name: Run tool install/uninstall in ${{ matrix.shell }}
        run: ${{ matrix.shell }} -c "./pipeline_test.sh"


#   Docker:
#     name: Linux Docker - ${{ matrix.os }}:${{ matrix.version }}
#     runs-on: ubuntu-latest
#     strategy:
#       matrix:
#         include:
#           - os: debian
#             version: "9"
#           - os: debian
#             version: "10"
#           - os: debian
#             version: "11"
#           - os: debian
#             version: "12"
#           - os: raspbian
#             version: "9"
#           - os: raspbian
#             version: "10"
#           - os: raspbian
#             version: "11"
#           - os: raspbian
#             version: "12"
#           - os: ubuntu
#             version: "20.10"
#           - os: ubuntu
#             version: "22.10"
#           - os: ubuntu
#             version: "24.04"
#     steps:
#       - uses: actions/checkout@v4
#       - name: Run tool install/uninstall tests in Docker
#         run: |
#           docker pull ${{ matrix.os }}:${{ matrix.version }}
#           docker run --rm -v ${{ github.workspace }}:/workspace -w /workspace ${{ matrix.os }}:${{ matrix.version }} /bin/bash -c "
#             apt-get update && apt-get install -y bash sudo curl gnupg
#             ./test-install.sh
#             ./test-uninstall.sh
#           "
