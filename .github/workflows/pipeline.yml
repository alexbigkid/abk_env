name: abk_env
on:
    push:
        branches:
            - main
        tags:
            - 'rel-patch'
            - 'rel-minor'
            - 'rel-major'

permissions:
    contents: write  # Needed for handle-release-tags job to push tags

# Prevent duplicate runs - prioritize by commit SHA
concurrency:
    group: ${{ github.workflow }}-${{ github.sha }}
    cancel-in-progress: true

env:
    ENV: prod

jobs:
    MacOS:
        name: MacOS ${{ matrix.version }}
        runs-on: macos-${{ matrix.version }}
        strategy:
            matrix:
                version: [13, 14, 15]
        steps:
            - name: checkout repo
              uses: actions/checkout@v4

            - name: Check runner
              run: .github/scripts/AgentInfo.sh

            - name: Ensure correct SHELL availability
              run: |
                echo "--------Shells----------------------"
                cat /etc/shells
                echo "-------MacOS SW version-------------"
                sw_vers

            - name: zsh install tools
              shell: zsh {0}
              run: |
                export SHELL=$(which zsh)
                echo "SHELL = $SHELL"
                ./test_install.sh "tools_"

            - name: zsh uninstall tools
              shell: zsh {0}
              run: |
                export SHELL=$(which zsh)
                echo "SHELL = $SHELL"
                ./test_uninstall.sh "tools_"

            - name: bash install tools
              shell: bash {0}
              run: |
                export SHELL=$(which bash)
                echo "SHELL = $SHELL"
                ./test_install.sh "tools_"

            - name: bash uninstall tools
              shell: bash {0}
              run: |
                export SHELL=$(which bash)
                echo "SHELL = $SHELL"
                ./test_uninstall.sh "tools_"

    Ubuntu:
        name: Ubuntu ${{ matrix.version }}
        runs-on: ubuntu-${{ matrix.version }}
        strategy:
            matrix:
                version: [22.04, 24.04]
        steps:
            - name: checkout repo
              uses: actions/checkout@v4

            - name: Check runner
              run: .github/scripts/AgentInfo.sh

            - name: Ensure zsh is installed
              run: |
                SHELL_CMD="zsh"
                echo "Checking if $SHELL_CMD is installed..."
                if ! command -v "$SHELL_CMD" &> /dev/null; then
                    echo "$SHELL_CMD not found, attempting to install..."
                    sudo apt-get update
                    sudo apt-get install -y "$SHELL_CMD"
                    echo "$SHELL_CMD just installed."
                else
                    echo "$SHELL_CMD is already installed."
                fi
                echo "--------Shells----------------------"
                cat /etc/shells
                echo "--------Linux os-release------------"
                cat /etc/os-release

            - name: zsh install tools
              shell: zsh {0}
              run: |
                export SHELL=$(which zsh)
                echo "SHELL = $SHELL"
                ./test_install.sh "tools_"

            - name: zsh uninstall tools
              shell: zsh {0}
              run: |
                export SHELL=$(which zsh)
                echo "SHELL = $SHELL"
                ./test_uninstall.sh "tools_"

            - name: bash install tools
              shell: bash {0}
              run: |
                export SHELL=$(which bash)
                echo "SHELL = $SHELL"
                ./test_install.sh "tools_"

            - name: bash uninstall tools
              shell: bash {0}
              run: |
                export SHELL=$(which bash)
                echo "SHELL = $SHELL"
                ./test_uninstall.sh "tools_"


#   Docker:
#     name: Linux Docker - ${{ matrix.os }}:${{ matrix.version }}
#     runs-on: ubuntu-latest
#     strategy:
#       matrix:
#         include:
#           - os: debian
#             version: "9"
#           - os: debian
#             version: "10"
#           - os: debian
#             version: "11"
#           - os: debian
#             version: "12"
#           - os: raspbian
#             version: "9"
#           - os: raspbian
#             version: "10"
#           - os: raspbian
#             version: "11"
#           - os: raspbian
#             version: "12"
#           - os: ubuntu
#             version: "20.10"
#           - os: ubuntu
#             version: "22.10"
#           - os: ubuntu
#             version: "24.04"
#     steps:
#       - uses: actions/checkout@v4
#       - name: Run tool install/uninstall tests in Docker
#         run: |
#           docker pull ${{ matrix.os }}:${{ matrix.version }}
#           docker run --rm -v ${{ github.workspace }}:/workspace -w /workspace ${{ matrix.os }}:${{ matrix.version }} /bin/bash -c "
#             apt-get update && apt-get install -y bash sudo curl gnupg
#             ./test_install.sh
#             ./test_uninstall.sh
#           "

    handle-release-tags:
        name: Handle Release Tags
        needs: [MacOS, Ubuntu]
        runs-on: ubuntu-latest
        if: always() && !cancelled()  # Run whether tests pass or fail, but not if cancelled due to concurrency
        steps:
            - name: Checkout code
              uses: actions/checkout@v4
              with:
                fetch-depth: 0
                token: ${{ secrets.RELEASE_TOKEN || secrets.GITHUB_TOKEN }}
                persist-credentials: true

            - name: Handle release tags
              run: ./.github/scripts/handle_release_tags.sh "${{ needs.MacOS.result }}" "${{ needs.Ubuntu.result }}" "${{ github.ref_name }}"
