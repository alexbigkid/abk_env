export ABK_SHELL="${SHELL##*/}"
if [ "$ABK_SHELL" = "bash" ]; then
    export ABK_ENV_DIR=$(dirname $BASH_SOURCE)
elif [ "$ABK_SHELL" = "zsh" ]; then
    export ABK_ENV_DIR=${0:a:h}
else
    export ABK_SHELL="${SHELL##*/}"
    echo "ERROR: $ABK_SHELL is not supported. Please consider using bash or zsh"
    exit 1
fi
echo "[‚òëÔ∏è  ABK_SHELL = $ABK_SHELL]"

#-------------------------
# add fixed environment first
#-------------------------
ABK_FIXED_ENV_TO_ADD=$(ls $ABK_ENV_DIR/[0-9][0-9][0-9]_*)
while IFS= read -r ABK_ENV_FULL_NAME; do
    if [ -f $ABK_ENV_FULL_NAME ]; then
        . $ABK_ENV_FULL_NAME
        # Only use PrintTrace if it's defined (after 001_vars.env is loaded)
        if command -v PrintTrace >/dev/null 2>&1; then
            PrintTrace "$TRACE_INFO" "[‚òëÔ∏è  added $ABK_ENV_FULL_NAME ...]"
        else
            echo "[‚òëÔ∏è  added $ABK_ENV_FULL_NAME ...]"
        fi
    fi
done <<< "$ABK_FIXED_ENV_TO_ADD"


#-------------------------
# if users bin directory exist and is not in the $PATH yet, include it
#-------------------------
# USER_BIN="$HOME/$BIN_DIR"
# USER_BIN_STR=":$USER_BIN:"
# if [ -d $USER_BIN ] && [ ! -z "${PATH##*$USER_BIN_STR*}" ]; then
#     PrintTrace "$TRACE_INFO" "  [üèÅ  adding users abkBin ($USER_BIN) to PATH ... ]"
#     export PATH="$USER_BIN:$PATH"
# else
#     PrintTrace "$TRACE_INFO" "  [üèÅ  users abkBin ($USER_BIN) is already in the PATH]"
# fi
#-------------------------
# Add user's bin directory to PATH if it exists and is not already in PATH
#-------------------------
USER_BIN="$HOME/$BIN_DIR"

if [ -d "$USER_BIN" ]; then
    case ":$PATH:" in
        *":$USER_BIN:"*)
            PrintTrace "$TRACE_INFO" "[‚òëÔ∏è  users abkBin ($USER_BIN) is already in the PATH]"
            ;;
        *)
            PrintTrace "$TRACE_INFO" "[‚òëÔ∏è  adding users abkBin ($USER_BIN) to PATH ... ]"
            export PATH="$USER_BIN:$PATH"
            ;;
    esac
fi


#-------------------------
# some useful tools in ~/.local/bin
#-------------------------
if [ -d "$HOME/.local/bin" ]; then
    case ":${PATH}:" in
        *:"$HOME/.local/bin":*)
            PrintTrace "$TRACE_INFO" "[‚òëÔ∏è  $HOME/.local/bin already in the PATH ... ]"
            ;;  # Already in PATH
        *)
            PrintTrace "$TRACE_INFO" "[‚òëÔ∏è  adding $HOME/.local/bin to PATH ... ]"
            export PATH="$HOME/.local/bin:$PATH"
            ;;
    esac
fi


#-------------------------
# Only for zsh: init compinit
#-------------------------
if [ "$ABK_SHELL" = "zsh" ]; then
    if ! whence -w compdef &>/dev/null; then
        PrintTrace "$TRACE_INFO" "[‚òëÔ∏è  adding zsh compinit ... ]"
        autoload -U compinit
        compinit -C
    fi
fi


#-------------------------
# add linked environment last
#-------------------------
ABK_LINK_ENV_TO_ADD=$(ls $ABK_ENV_DIR/LINK_*)
while IFS= read -r ABK_ENV_FULL_NAME; do
    if [ -f $ABK_ENV_FULL_NAME ]; then
        PrintTrace "$TRACE_INFO" "[‚òëÔ∏è  adding $ABK_ENV_FULL_NAME ...]"
        . $ABK_ENV_FULL_NAME
    fi
done <<< "$ABK_LINK_ENV_TO_ADD"


#-------------------------
# some useful tools add binaries and libs in .local directory.
# So it needs to be in the PATH
#-------------------------
# export PATH=$HOME/.local/bin:$PATH
