export ABK_SHELL="${SHELL##*/}"
if [ "$ABK_SHELL" = "bash" ]; then
    export ABK_ENV_DIR=$(dirname $BASH_SOURCE)
elif [ "$ABK_SHELL" = "zsh" ]; then
    export ABK_ENV_DIR=${0:a:h}
else
    echo -e "${RED}ERROR:${NC} $ABK_SHELL is not supported. Please consider using bash or zsh"
fi

#-------------------------
# add fixed environment first
#-------------------------
ABK_FIXED_ENV_TO_ADD=$(ls $ABK_ENV_DIR/[0-9][0-9][0-9]_*)
while IFS= read -r ABK_ENV_FULL_NAME; do
    if [ -f $ABK_ENV_FULL_NAME ]; then
        . $ABK_ENV_FULL_NAME
        PrintTrace $TRACE_INFO "[‚òëÔ∏è  added $ABK_ENV_FULL_NAME ...]"
    fi
done <<< "$ABK_FIXED_ENV_TO_ADD"


#-------------------------
# if users bin directory exist and is not in the $PATH yet, include it
#-------------------------
USER_BIN="$HOME/$BIN_DIR"
USER_BIN_STR=":$USER_BIN:"
if [ -d $USER_BIN ] && [ ! -z "${PATH_STR##*$USER_BIN_STR*}" ]; then
    PrintTrace $TRACE_INFO "  [üèÅ  adding users abk bin ($USER_BIN) to PATH ... ]"
    export PATH="$USER_BIN:$PATH"
else
    PrintTrace $TRACE_INFO "  [üèÅ  users abk bin ($USER_BIN) is already in the PATH]"
fi


#-------------------------
# add linked environment last
#-------------------------
ABK_LINK_ENV_TO_ADD=$(ls $ABK_ENV_DIR/LINK_*)
while IFS= read -r ABK_ENV_FULL_NAME; do
    if [ -f $ABK_ENV_FULL_NAME ]; then
        PrintTrace $TRACE_INFO "[‚òëÔ∏è  adding $ABK_ENV_FULL_NAME ...]"
        . $ABK_ENV_FULL_NAME
    fi
done <<< "$ABK_LINK_ENV_TO_ADD"



#-------------------------
# some useful tools add binaries and libs in .local directory.
# So it needs to be in the PATH
#-------------------------
# export PATH=$HOME/.local/bin:$PATH
