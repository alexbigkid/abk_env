if [ "$(command -v fzf)" != "" ]; then
    if [ "$ABK_SHELL" = "bash" ] || [ "$ABK_SHELL" = "zsh" ]; then

        # Preview file content using bat (https://github.com/sharkdp/bat)
        if command -v bat &>/dev/null; then
            export FZF_CTRL_T_OPTS="--walker-skip .git,node_modules,target --preview 'bat -n --color=always {}' --bind 'ctrl-/:change-preview-window(down|hidden|)'"
        else
            export FZF_CTRL_T_OPTS="--walker-skip .git,node_modules,target --preview 'cat {}' --bind 'ctrl-/:change-preview-window(down|hidden|)'"
        fi

        # CTRL-Y to copy the command into clipboard using pbcopy
        # export FZF_CTRL_R_OPTS="--bind 'ctrl-y:execute-silent(echo -n {2..} | pbcopy)+abort' --color header:italic --header 'Press CTRL-Y to copy command into clipboard'"
        export FZF_CTRL_R_OPTS=

        # Print tree structure in the preview window
        # export FZF_ALT_C_OPTS="--walker-skip .git,node_modules,target --preview 'tree -C {}'"
        export FZF_ALT_C_OPT=

        PrintTrace "$TRACE_INFO" "  [ðŸŽ¬ Initializing fzf ...]"
        eval "$(fzf --$ABK_SHELL)"

        fcd() {
            local LCL_DIR
            LCL_DIR=$(find ${1:-.} -type d -not -path '*/\.*' 2> /dev/null | fzf +m) && cd "$LCL_DIR"
        }
    else
        PrintTrace "$TRACE_ERROR" "  ${YELLOW}Only able to init on bash or zsh${NC}"
    fi
else
    PrintTrace "$TRACE_ERROR" "  ${YELLOW}fzf is not installed! Please install fzf${NC}"
fi
