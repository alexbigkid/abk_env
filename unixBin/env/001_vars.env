export TRUE=0
export FALSE=1

export TRACE_NONE=0
export TRACE_CRITICAL=1
export TRACE_ERROR=2
export TRACE_FUNCTION=3
export TRACE_INFO=4
export TRACE_DEBUG=5
export TRACE_ALL=6
export TRACE_LEVEL=$TRACE_INFO

# exit error codes
export ERROR_CODE_SUCCESS=0
export ERROR_CODE_GENERAL_ERROR=1
export ERROR_CODE_NEEDED_FILE_DOES_NOT_EXIST=2
export ERROR_CODE=$ERROR_CODE_SUCCESS

export BIN_DIR="abkBin"
export SH_BIN_DIR="unixBin"
export HOME_BIN_DIR="$HOME/$BIN_DIR"
export SH_PACKAGES_DIR="installedPackages"

unameOut="$(uname -s)"
case "${unameOut}" in
Linux*) export ABK_UNIX_TYPE=linux ;;
Darwin*) export ABK_UNIX_TYPE=macOS ;;
CYGWIN*) export ABK_UNIX_TYPE=cygwin ;;
MINGW*) export ABK_UNIX_TYPE=mingw ;;
*) ABK_UNIX_TYPE="UNKNOWN:${unameOut}" ;;
esac

export ABK_SUPPORTED_SHELLS=(bash zsh)
export ABK_SUPPORTED_UNIX=(macOS linux)
export ABK_SUPPORTED_LINUX_ID_LIKE=(debian)

export ABK_USER_CONFIG_FILE_BASH=".bashrc"
export ABK_USER_CONFIG_FILE_ZSH=".zshrc"
export ABK_USER_SHELL_CONFIG_SHELL=($ABK_USER_CONFIG_FILE_BASH $ABK_USER_CONFIG_FILE_ZSH)
export SHELL_SESSIONS_DISABLE=1

if [ "$ABK_SHELL" = "zsh" ]; then
    export ABK_USER_CONFIG_FILE_SHELL=$ABK_USER_CONFIG_FILE_ZSH
elif [ "$ABK_SHELL" = "bash" ]; then
    export ABK_USER_CONFIG_FILE_SHELL=$ABK_USER_CONFIG_FILE_BASH
else
    PrintTrace "$TRACE_ERROR" "${RED}ERROR: $ABK_SHELL is not supported.\nPlease consider using one of those shells: ${ABK_SUPPORTED_SHELLS[*]}${NC}"
fi


# PrintTrace() {
#     local LCL_TRACE_LEVEL="${1:-}"
#     shift || true
#     local LCL_PRINT_STRING=("$@")
#     # If trace level is not set or not a number, exit silently
#     [[ -z "$LCL_TRACE_LEVEL" ]] && return 0
#     [[ -z "${TRACE_FUNCTION:-}" || -z "${TRACE_LEVEL:-}" ]] && return 0
#     [[ "$LCL_TRACE_LEVEL" =~ ^[0-9]+$ ]] || return 0

#     if [ "$LCL_TRACE_LEVEL" -eq "$TRACE_FUNCTION" ]; then
#         [ "$TRACE_LEVEL" -ge "$LCL_TRACE_LEVEL" ] && echo -e "${CYN}${LCL_PRINT_STRING[*]}${NC}"
#     else
#         [ "$TRACE_LEVEL" -ge "$LCL_TRACE_LEVEL" ] && echo -e "${LCL_PRINT_STRING[*]}"
#     fi
#     return 0
# }

PrintTrace() {
    local LCL_TRACE_LEVEL="$1"
    shift
    local LCL_OUTPUT="${*}"

    if [ "$TRACE_LEVEL" -ge "$LCL_TRACE_LEVEL" ]; then
        if [ "$LCL_TRACE_LEVEL" -eq "$TRACE_FUNCTION" ] && [ "${LCL_OUTPUT:0:2}" == "->" ]; then
            echo ""
        fi

        if [ "$LCL_TRACE_LEVEL" -eq "$TRACE_FUNCTION" ]; then
            echo -e "${CYN}${LCL_OUTPUT}${NC}"
        else
            echo -e "$LCL_OUTPUT"
        fi
    fi
}
