export TRUE=0
export FALSE=1

export TRACE_NONE=0
export TRACE_CRITICAL=1
export TRACE_ERROR=2
export TRACE_FUNCTION=3
export TRACE_INFO=4
export TRACE_DEBUG=5
export TRACE_ALL=6
export TRACE_LEVEL=$TRACE_INFO

# exit error codes
export ERROR_CODE_SUCCESS=0
export ERROR_CODE_GENERAL_ERROR=1
export ERROR_CODE_NEEDED_FILE_DOES_NOT_EXIST=2
export ERROR_CODE=$ERROR_CODE_SUCCESS

BIN_DIR="abkBin"
SH_BIN_DIR="unixBin"
HOME_BIN_DIR="$HOME/$BIN_DIR"
SH_PACKAGES_DIR="installedPackages"

unameOut="$(uname -s)"
case "${unameOut}" in
Linux*) export ABK_UNIX_TYPE=linux ;;
Darwin*) export ABK_UNIX_TYPE=macOS ;;
CYGWIN*) export ABK_UNIX_TYPE=cygwin ;;
MINGW*) export ABK_UNIX_TYPE=mingw ;;
*) ABK_UNIX_TYPE="UNKNOWN:${unameOut}" ;;
esac

export ABK_SHELL="${SHELL##*/}"
export ABK_SUPPORTED_SHELLS=(bash zsh)
export ABK_SUPPORTED_UNIX=(macOS linux)
export ABK_SUPPORTED_LINUX_ID_LIKE=(debian)

export ABK_USER_CONFIG_FILE_BASH=".bashrc"
export ABK_USER_CONFIG_FILE_ZSH=".zshrc"
export ABK_USER_SHELL_CONFIG_SHELL=($ABK_USER_CONFIG_FILE_BASH $ABK_USER_CONFIG_FILE_ZSH)
export SHELL_SESSIONS_DISABLE=1

PrintTrace() {
    local LCL_TRACE_LEVEL=$1
    shift
    local LCL_PRINT_STRING=("$@")
    if [ "$LCL_TRACE_LEVEL" -eq "$TRACE_FUNCTION" ]; then
        [ "$TRACE_LEVEL" -ge "$LCL_TRACE_LEVEL" ] && echo -e "${CYAN}${LCL_PRINT_STRING[@]}${NC}"
    else
        [ "$TRACE_LEVEL" -ge "$LCL_TRACE_LEVEL" ] && echo -e "${LCL_PRINT_STRING[@]}"
    fi
}


if [ "$ABK_SHELL" = "bash" ]; then
    export ABK_USER_CONFIG_FILE_SHELL=$ABK_USER_CONFIG_FILE_BASH
elif [ "$ABK_SHELL" = "zsh" ]; then
    export ABK_USER_CONFIG_FILE_SHELL=$ABK_USER_CONFIG_FILE_ZSH
else
    PrintTrace $TRACE_ERROR "${RED}ERROR: $ABK_SHELL is not supported.\nPlease consider using one of those shells: ${ABK_SUPPORTED_SHELLS[*]}${NC}"
fi
